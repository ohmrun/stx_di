digraph graphname {
	node [shape=plaintext];
n93[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(93) BKNormal</td></tr>
	<tr><td port="ep0" align="left">tmp = \"phi\"(tmp, tmp)</td></tr>
	<tr><td port="e0" align="left">this.id = tmp</td></tr>
	<tr><td port="e1" align="left">var tmp = haxe.Log.trace</td></tr>
	<tr><td port="e2" align="left">var tmp = \"new: \" + this.id</td></tr>
	<tr><td port="e3" align="left">tmp(tmp, {fileName : \"src/main/haxe/stx/DI.hx\", lineNumber : 41, className : \"stx.DI\", methodName : \"new\"})</td></tr>
	<tr><td port="e4" align="left">this.instances = new haxe.ds.StringMap()</td></tr>
	<tr><td port="e5" align="left">this.factories = new haxe.ds.StringMap()</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n92[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(92) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = id</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n91[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(91) BKConditional</td></tr>
	<tr><td port="e0" align="left">tmp = Math.random()</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n90[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(90) BKNormal</td></tr>
	<tr><td port="ep0" align="left">string = \"phi\"(string, string)</td></tr>
	<tr><td port="ep1" align="left">tmp = \"phi\"(tmp, tmp)</td></tr>
	<tr><td port="e0" align="left">this.resolver = \"fun\"(88)</td></tr>
	<tr><td port="e1" align="left">haxe.Log.trace(factories, {fileName : \"src/main/haxe/stx/DI.hx\", lineNumber : 39, className : \"stx.DI\", methodName : \"new\"})</td></tr>
	<tr><td port="e2" align="left">var tmp</td></tr>
	<tr><td port="e3" align="left">var tmp = id == null</td></tr>
	<tr><td port="e4" align="left">@:cond-branch tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n89[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(89) BKFunctionEnd</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n88[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(88) BKFunctionBegin</td></tr>
	<tr><td port="e0" align="left">var tmp = stx.di.Resolvers.resolve(`this)</td></tr>
	<tr><td port="e1" align="left">return tmp(string)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n87[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(87) BKFunctionEnd</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n86[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(86) BKFunctionBegin</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(1) BKRoot</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1:out -> n86:in[label="CFGFunction"];
n86:out -> n90:in[label="CFGGoto"];
n86:out -> n88:in[label="CFGFunction"];
n88:out -> n89:in[label="CFGGoto"];
n89:out -> n90:in[label="CFGGoto"];
n90:out -> n92:in[label="CFGCondElse"];
n90:out -> n91:in[label="CFGCondBranch true"];
n91:out -> n93:in[label="CFGGoto"];
n93:out -> n87:in[label="CFGGoto"];
n92:out -> n93:in[label="CFGGoto"];
}
